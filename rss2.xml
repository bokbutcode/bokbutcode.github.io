<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>복붙코드</title>
    <link>https://bokbutcode.github.io/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>끄적끄적</description>
    <pubDate>Sat, 21 Nov 2020 16:28:53 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>연결 리스트</title>
      <link>https://bokbutcode.github.io/2020/11/21/%EC%97%B0%EA%B2%B0%EB%A6%AC%EC%8A%A4%ED%8A%B8/</link>
      <guid>https://bokbutcode.github.io/2020/11/21/%EC%97%B0%EA%B2%B0%EB%A6%AC%EC%8A%A4%ED%8A%B8/</guid>
      <pubDate>Sat, 21 Nov 2020 11:34:35 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;연결리스트란&quot;&gt;&lt;a href=&quot;#연결리스트란&quot; class=&quot;headerlink&quot; title=&quot;연결리스트란&quot;&gt;&lt;/a&gt;연결리스트란&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;각 노드의 포인터를 사용하여 노드가 서로 연결 되어있는 자료구조&lt;/li&gt;
&lt;li&gt;배열과
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="연결리스트란"><a href="#연결리스트란" class="headerlink" title="연결리스트란"></a>연결리스트란</h3><ul><li>각 노드의 포인터를 사용하여 노드가 서로 연결 되어있는 자료구조</li><li>배열과 비교하였을때 추가/삭제가 용이 하나 배열의 인덱스를 이용한 접근과 다르게 연결리스트의 데이터 접근을 위해선 순차적으로 탐색을 해야 하기 때문에 탐색 속도가 좋지 않다.</li><li>Java &gt; LinkedList 에서는 get(index)를 지원하나 내부는 순차 탐색으로 이루어져 있다.</li></ul><h3 id="연결리스트-종류"><a href="#연결리스트-종류" class="headerlink" title="연결리스트 종류"></a>연결리스트 종류</h3><ul><li>단순 연결 리스트 (Singly Linked List)<ul><li>각 노드가 다음 노드만을 참조하는 단순한 구조의 연결 리스트</li></ul></li><li>원형 연결 리스트 (Circular Linked List)<ul><li>단순 연결 리스트와 동일 한 구조를 가지고 있으나 마지막 노드가 첫 노드를 참조하여 원형 구조의 연결 리스트</li></ul></li><li>이중 연결 리스트 (Dubly Linked List)<ul><li>단순 연결 리스트와 원형 연결 리스트에서는 한쪽 방향으로만 포인터가 존재하여 한바퀴를 순회하여만 이전 노드를 다시 참조 할 수 있다. 이런 단점을 보완하여 노드별로 양쪽 노드를 연결하여 이전 노드와 다음 노드를 쉽게 참조 할 수 있는 구조의 연결 리스트</li></ul></li></ul><h3 id="Java로-구현한-Linked-List"><a href="#Java로-구현한-Linked-List" class="headerlink" title="Java로 구현한 Linked List"></a>Java로 구현한 Linked List</h3><ul><li><strong>LinkedListMain</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LinkedListMain</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 단순 연결 리스트 (Singly Linked List)</span></span><br><span class="line">        SinglyLinkedList sl = <span class="keyword">new</span> SinglyLinkedList();</span><br><span class="line">        System.out.println(<span class="string">"단순 연결 리스트 (Singly Linked List)"</span>);</span><br><span class="line">        System.out.println(<span class="string">"(1) 공백 리스트에 노드 3개 삽입하기"</span>);</span><br><span class="line">        sl.insertLastNode(<span class="string">"월"</span>);</span><br><span class="line">        sl.insertLastNode(<span class="string">"수"</span>);</span><br><span class="line">        sl.insertLastNode(<span class="string">"일"</span>);</span><br><span class="line">        sl.printList();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"(2) 수 노드 뒤에 금 노드 삽입하기"</span>);</span><br><span class="line">        SinglyListNode pre = sl.searchNode(<span class="string">"수"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(pre == <span class="keyword">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">"검색실패 &gt;&gt; 찾는 데이터가 없습니다."</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            sl.insertMiddleNode(pre,<span class="string">"금"</span>);</span><br><span class="line">            sl.printList();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"(3) 리스트의 노드를 역순으로 바꾸기"</span>);</span><br><span class="line">        sl.reversList();</span><br><span class="line">        sl.printList();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"(4) 리스트의 마지막 노드 삭제하기"</span>);</span><br><span class="line">        sl.deleteLastNode();</span><br><span class="line">        sl.printList();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//원형 연결 리스트 (Circular Linked List)</span></span><br><span class="line">        CircularLinkedList cl = <span class="keyword">new</span> CircularLinkedList();</span><br><span class="line">        System.out.println(<span class="string">"원형 연결 리스트 (Circular Linked List)"</span>);</span><br><span class="line">        System.out.println(<span class="string">"(1) 공백 리스트에 노드 3개 삽입하기"</span>);</span><br><span class="line">        cl.insertLastNode(<span class="string">"월"</span>);</span><br><span class="line">        cl.insertLastNode(<span class="string">"수"</span>);</span><br><span class="line">        cl.insertLastNode(<span class="string">"일"</span>);</span><br><span class="line">        cl.printList();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"(2) [수] 노드 다음 노드 [금] 노드 삽입하기"</span>);</span><br><span class="line">        pre = cl.searchNode(<span class="string">"수"</span>);</span><br><span class="line">        <span class="keyword">if</span>(pre == <span class="keyword">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">"검색실패 &gt;&gt; 찾는 데이터가 없습니다."</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cl.insertMiddleNode(pre,<span class="string">"금"</span>);</span><br><span class="line">            cl.printList();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"(3) [수] 노드 삭제하기"</span>);</span><br><span class="line">        pre = cl.searchNode(<span class="string">"수"</span>);</span><br><span class="line">        cl.deleteMiddleNode(pre);</span><br><span class="line">        cl.printList();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"(4) 마지막 노드 삭제하기"</span>);</span><br><span class="line">        cl.deleteLastNode();</span><br><span class="line">        cl.printList();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//이중 연결 리스트 (Dubly Linked List)</span></span><br><span class="line">        DublyLinkedList dll = <span class="keyword">new</span> DublyLinkedList();</span><br><span class="line">        System.out.println(<span class="string">"이중 연결 리스트 (Dubly Linked List)"</span>);</span><br><span class="line">        System.out.println(<span class="string">"(1) 공백 리스트에 노드 3개 삽입하기"</span>);</span><br><span class="line">        dll.insertLastNode(<span class="string">"월"</span>);</span><br><span class="line">        dll.insertLastNode(<span class="string">"수"</span>);</span><br><span class="line">        dll.insertLastNode(<span class="string">"일"</span>);</span><br><span class="line">        dll.printList();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"(2) [수] 노드 앞/뒤 [금] 노드 삽입하기"</span>);</span><br><span class="line">        DublyListNode dPre = dll.searchNode(<span class="string">"수"</span>);</span><br><span class="line"></span><br><span class="line">        Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.print(<span class="string">"앞(1)/뒤(0) 선택해주세요. : "</span>);</span><br><span class="line">        <span class="keyword">boolean</span> insertPostion = scan.nextInt() == <span class="number">1</span> ? <span class="keyword">true</span> : <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(dPre == <span class="keyword">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">"검색실패 &gt;&gt; 찾는 데이터가 없습니다."</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            dll.insertMiddleNode(dPre,<span class="string">"금"</span>, insertPostion);</span><br><span class="line">            dll.printList();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"(3) [수] 노드 삭제하기"</span>);</span><br><span class="line">        dPre = dll.searchNode(<span class="string">"수"</span>);</span><br><span class="line">        dll.deleteMiddleNode(dPre);</span><br><span class="line">        dll.printList();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"(4) 마지막 노드 삭제하기"</span>);</span><br><span class="line">        dll.deleteLastNode();</span><br><span class="line">        dll.printList();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>SinglyListNode</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SinglyListNode</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 데이터 변수</span></span><br><span class="line">    <span class="keyword">private</span> String data;</span><br><span class="line">    <span class="comment">// 다른 노드를 참조 링크 노드</span></span><br><span class="line">    <span class="keyword">public</span> SinglyListNode link;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SinglyListNode</span><span class="params">(String data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">        <span class="keyword">this</span>.link = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.data;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>SinglyLinkedList</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SinglyLinkedList</span> </span>&#123;</span><br><span class="line">    <span class="comment">// SinglyListNode 타입 head 변수</span></span><br><span class="line">    <span class="keyword">private</span> SinglyListNode head;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 생성자</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SinglyLinkedList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.head = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// LinkedList 중간 새로운 node 추가</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertMiddleNode</span><span class="params">(SinglyListNode pre, String data)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 새로운 node 생성</span></span><br><span class="line">        SinglyListNode newNode = <span class="keyword">new</span> SinglyListNode(data);</span><br><span class="line">        <span class="comment">// 새로운 node의 삽입 될 위치 선행 node link 참조</span></span><br><span class="line">        newNode.link = pre.link;</span><br><span class="line">        <span class="comment">// 선행 node는 새로운 node 참조</span></span><br><span class="line">        pre.link = newNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// LinkedList 마지막 node의 새로운 node 추가</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertLastNode</span><span class="params">(String data)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 새로운 node 생성</span></span><br><span class="line">        SinglyListNode newNode = <span class="keyword">new</span> SinglyListNode(data);</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// head가 null 일 경우 첫 node를 참조</span></span><br><span class="line">            <span class="keyword">this</span>.head = newNode;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// head가 null이 아닐 경우</span></span><br><span class="line">            SinglyListNode currentNode = head;</span><br><span class="line">            <span class="comment">// 단순 연결 리스트의 마지막 node의 link는 null</span></span><br><span class="line">            <span class="comment">// node를 순차 탐색하며 각 node의 link를 확인</span></span><br><span class="line">            <span class="keyword">while</span> (currentNode.link != <span class="keyword">null</span>) currentNode = currentNode.link;</span><br><span class="line">            <span class="comment">// 마지막 link의 새로운 node를 삽입</span></span><br><span class="line">            currentNode.link = newNode;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 마지막 node 삭제</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteLastNode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SinglyListNode preNode, currentNode;</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Linked List의 삭제할 node가 존재하지 않습니다."</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// head가 가르키는 node 할당</span></span><br><span class="line">            preNode = head;</span><br><span class="line">            <span class="comment">// prenode의 다음 node를 할당</span></span><br><span class="line">            currentNode = head.link;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//currentNode의 link가 null이 아닐 경우 한 node씩 다음 node로 이동</span></span><br><span class="line">            <span class="keyword">while</span> (currentNode.link != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="comment">// currentNode의 node를 가져와 할당</span></span><br><span class="line">                preNode = currentNode;</span><br><span class="line">                <span class="comment">// 다음 node를 할당</span></span><br><span class="line">                currentNode = currentNode.link;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 마지막 node 이전 node의 link를 null로 저장하여 마지막 node 삭제</span></span><br><span class="line">            preNode.link = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// node 순차 검색</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SinglyListNode <span class="title">searchNode</span><span class="params">(String data)</span> </span>&#123;</span><br><span class="line">        SinglyListNode currentNode = <span class="keyword">this</span>.head;</span><br><span class="line">        <span class="keyword">while</span> (currentNode != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (data == currentNode.getData())</span><br><span class="line">                <span class="keyword">return</span> currentNode;</span><br><span class="line">            <span class="keyword">else</span> currentNode = currentNode.link;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> currentNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// node 뒤집기</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reversList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 첫번째 node</span></span><br><span class="line">        SinglyListNode nextNode = head;</span><br><span class="line">        SinglyListNode currentNode = <span class="keyword">null</span>;</span><br><span class="line">        SinglyListNode preNode = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 첫번째 node가 순차적으로 이동하며 currentNode의 link가 preNode를 참조</span></span><br><span class="line">        <span class="comment">// preNode를 currentNode 위치로 이동</span></span><br><span class="line">        <span class="comment">// currentNode는 nextNode 위치로 이동</span></span><br><span class="line">        <span class="comment">// nextNode는 다음 노드 위치로 이동</span></span><br><span class="line">        <span class="comment">// currentNode의 link는 preNode를 참조하도록 함</span></span><br><span class="line">        <span class="keyword">while</span> (nextNode != <span class="keyword">null</span>) &#123;</span><br><span class="line">            preNode = currentNode;</span><br><span class="line">            currentNode = nextNode;</span><br><span class="line">            nextNode = nextNode.link;</span><br><span class="line">            currentNode.link = preNode;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// currentNode가 마지막 노드를 가리킬 때, head는 currentNode를 참조</span></span><br><span class="line">        head = currentNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 모든 node 출력</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SinglyListNode currentNode = <span class="keyword">this</span>.head;</span><br><span class="line">        System.out.printf(<span class="string">"LinkedList = ("</span>);</span><br><span class="line">        <span class="keyword">while</span> (currentNode != <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.printf(currentNode.getData());</span><br><span class="line">            currentNode = currentNode.link;</span><br><span class="line">            <span class="keyword">if</span> (currentNode != <span class="keyword">null</span>) &#123;</span><br><span class="line">                System.out.printf(<span class="string">", "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">")"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>CircularLinkedList.java</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CircularLinkedList</span> </span>&#123;</span><br><span class="line">    <span class="comment">// SinglyListNode 타입 cl 변수</span></span><br><span class="line">    <span class="keyword">private</span> SinglyListNode cl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 생성자</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CircularLinkedList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.cl = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// LinkedList 중간 새로운 node 추가</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertMiddleNode</span><span class="params">(SinglyListNode pre, String data)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 새로운 node 생성</span></span><br><span class="line">        SinglyListNode newNode = <span class="keyword">new</span> SinglyListNode(data);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.cl == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="comment">// 원형 연결 리스트가 null일 경우 첫 원형 연결 리스트 생성</span></span><br><span class="line">            <span class="keyword">this</span>.cl = newNode;</span><br><span class="line">            newNode.link = newNode;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">// 이전 node의 다음 node를 가르키는 link를 새로운 node link 주입</span></span><br><span class="line">            <span class="comment">// 이전 node는 새로은 node를 가르키도록 link에 주입</span></span><br><span class="line">            newNode.link = pre.link;</span><br><span class="line">            pre.link = newNode;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// LinkedList 마지막 node의 새로운 node 추가</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertLastNode</span><span class="params">(String data)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 새로운 node 생성</span></span><br><span class="line">        SinglyListNode newNode = <span class="keyword">new</span> SinglyListNode(data);</span><br><span class="line">        <span class="keyword">if</span> (cl == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 원형 연결 리스트 null일 경우 첫 원형 연결 리스트 생성</span></span><br><span class="line">            <span class="keyword">this</span>.cl = newNode;</span><br><span class="line">            newNode.link = newNode;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// null이 아닐 경우</span></span><br><span class="line">            <span class="comment">// 첫 node와 참조 link의 node가 같을 경우 마지막으로 판단하여</span></span><br><span class="line">            <span class="comment">// 새로운 node의 첫 node 링크 저장과 이전 node의 새로운 node 링크 저장</span></span><br><span class="line">            SinglyListNode currentNode = cl;</span><br><span class="line">            <span class="keyword">while</span> (currentNode.link != cl) currentNode = currentNode.link;</span><br><span class="line">            newNode.link = currentNode.link;</span><br><span class="line">            currentNode.link = newNode;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 중간 node 삭제</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteMiddleNode</span><span class="params">(SinglyListNode pre)</span> </span>&#123;</span><br><span class="line">        SinglyListNode currentNode;</span><br><span class="line">        <span class="keyword">if</span> (cl == <span class="keyword">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">"빈 노드를 삭제 할 수 없습니다."</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            currentNode = <span class="keyword">this</span>.cl;</span><br><span class="line">            <span class="keyword">while</span>(currentNode.getData() != pre.getData())&#123;</span><br><span class="line">                currentNode = currentNode.link;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 현재 node의 다음 node의 값이 삭제 되어야 할 node 값과 동일 할 경우</span></span><br><span class="line">            <span class="comment">// 현재 node의 link를 삭제 되어야할 link로 변경</span></span><br><span class="line">            currentNode.link = pre.link;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 마지막 node 삭제</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteLastNode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SinglyListNode pre, currentNode;</span><br><span class="line">        <span class="keyword">if</span> (cl == <span class="keyword">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">"빈 노드를 삭제 할 수 없습니다."</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 첫번째 node를 할당</span></span><br><span class="line">            pre = <span class="keyword">this</span>.cl;</span><br><span class="line">            <span class="comment">// 두번째 node를 할당</span></span><br><span class="line">            currentNode = cl.link;</span><br><span class="line">            <span class="comment">// node를 순차 탐색하여 첫번째 node를 참조하는 마지막 node를 탐색</span></span><br><span class="line">            <span class="keyword">while</span> (currentNode.link != cl) &#123;</span><br><span class="line">                pre = currentNode;</span><br><span class="line">                currentNode = currentNode.link;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 마지막 node 이전 link를 첫번째 node를 참조하는 마지막 node의 link로 변경</span></span><br><span class="line">            pre.link = currentNode.link;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 검색 node를 순차 검색</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SinglyListNode <span class="title">searchNode</span><span class="params">(String data)</span> </span>&#123;</span><br><span class="line">        SinglyListNode currentNode = <span class="keyword">this</span>.cl;</span><br><span class="line">        <span class="keyword">while</span> (currentNode != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (data == currentNode.getData())</span><br><span class="line">                <span class="keyword">return</span> currentNode;</span><br><span class="line">            <span class="keyword">else</span> currentNode = currentNode.link;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> currentNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 모든 node 출력</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SinglyListNode currentNode = <span class="keyword">this</span>.cl;</span><br><span class="line">        System.out.printf(<span class="string">"LinkedList = ("</span>);</span><br><span class="line">        <span class="keyword">while</span> (currentNode.link != cl) &#123;</span><br><span class="line">            System.out.printf(currentNode.getData()+<span class="string">" "</span>);</span><br><span class="line">            currentNode = currentNode.link;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.printf(currentNode.getData());</span><br><span class="line">        System.out.println(<span class="string">")"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>DublyListNode</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DublyListNode</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 데이터 변수</span></span><br><span class="line">    <span class="keyword">private</span> String data;</span><br><span class="line">    <span class="comment">// 이전 node link</span></span><br><span class="line">    <span class="keyword">public</span> DublyListNode plink;</span><br><span class="line">    <span class="comment">//  다음 node link</span></span><br><span class="line">    <span class="keyword">public</span> DublyListNode nlink;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DublyListNode</span><span class="params">(String data)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">        <span class="keyword">this</span>.plink = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">this</span>.nlink = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getData</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.data;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>**DublyLinkedList</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DublyLinkedList</span> </span>&#123;</span><br><span class="line">    <span class="comment">// DublyListNode 타입 dl 변수</span></span><br><span class="line">    <span class="keyword">private</span> DublyListNode head;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 생성자</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DublyLinkedList</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.head = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// LinkedList 중간 새로운 node 추가</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertMiddleNode</span><span class="params">(DublyListNode pre, String data, <span class="keyword">boolean</span> insertPostion)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 새로운 node 생성</span></span><br><span class="line">        DublyListNode newNode = <span class="keyword">new</span> DublyListNode(data);</span><br><span class="line">        <span class="keyword">if</span>(insertPostion)&#123;</span><br><span class="line">            <span class="comment">// 새로운 node의 삽입 될 위치 선행 node link 참조</span></span><br><span class="line">            newNode.plink = pre.plink;</span><br><span class="line">            newNode.nlink = pre;</span><br><span class="line">            pre.plink.nlink = newNode;</span><br><span class="line">            pre.plink = newNode;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">// 새로운 node의 삽입 될 위치 선행 node link 참조</span></span><br><span class="line">            newNode.plink = pre;</span><br><span class="line">            newNode.nlink = pre.nlink;</span><br><span class="line">            <span class="comment">// 선행 node는 새로운 node 참조</span></span><br><span class="line">            pre.nlink = newNode;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// LinkedList 마지막 node의 새로운 node 추가</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertLastNode</span><span class="params">(String data)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 새로운 node 생성</span></span><br><span class="line">        DublyListNode newNode = <span class="keyword">new</span> DublyListNode(data);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.head == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 이중 연결 리스트 null일 경우 첫 이중 연결 리스트 생성</span></span><br><span class="line">            <span class="keyword">this</span>.head = newNode;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// null이 아닐 경우</span></span><br><span class="line">            <span class="comment">// 첫 node와 참조 link의 node가 같을 경우 마지막으로 판단하여</span></span><br><span class="line">            <span class="comment">// 새로운 node의 첫 node 링크 저장과 이전 node의 새로운 node 링크 저장</span></span><br><span class="line">            DublyListNode currentNode = <span class="keyword">this</span>.head;</span><br><span class="line">            <span class="keyword">while</span> (currentNode.nlink != <span class="keyword">null</span>) currentNode = currentNode.nlink;</span><br><span class="line">            newNode.nlink = currentNode.nlink;</span><br><span class="line">            currentNode.nlink = newNode;</span><br><span class="line">            newNode.plink = currentNode;</span><br><span class="line">            currentNode.nlink = newNode;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 중간 node 삭제</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteMiddleNode</span><span class="params">(DublyListNode delNode)</span> </span>&#123;</span><br><span class="line">        DublyListNode preNode, currentNode;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.head == <span class="keyword">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">"빈 노드를 삭제 할 수 없습니다."</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// head가 가르키는 node 할당</span></span><br><span class="line">            preNode = head;</span><br><span class="line">            <span class="comment">// prenode의 다음 node를 할당</span></span><br><span class="line">            currentNode = head.nlink;</span><br><span class="line">            <span class="comment">//currentNode의 link가 null이 아닐 경우 한 node씩 다음 node로 이동</span></span><br><span class="line">            <span class="keyword">while</span>(currentNode.getData() != delNode.getData())&#123;</span><br><span class="line">                <span class="comment">// currentNode의 node를 가져와 할당</span></span><br><span class="line">                preNode = currentNode;</span><br><span class="line">                <span class="comment">// 다음 node를 할당</span></span><br><span class="line">                currentNode = currentNode.nlink;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 현재 node의 다음 node의 값이 삭제 되어야 할 node 값과 동일 할 경우</span></span><br><span class="line">            <span class="comment">// 삭제 될 node 이전 node에 nlink를 삭제 될 node nlink로 변경</span></span><br><span class="line"><span class="comment">// 현재 node 다음 노드의 이전 node 참조 link를 삭제 될 node 이전 node로 변경</span></span><br><span class="line">            preNode.nlink = currentNode.nlink;</span><br><span class="line">            currentNode.nlink.plink = preNode;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 마지막 node 삭제</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteLastNode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        DublyListNode preNode, currentNode;</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Linked List의 삭제할 node가 존재하지 않습니다."</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// head가 가르키는 node 할당</span></span><br><span class="line">            preNode = head;</span><br><span class="line">            <span class="comment">// prenode의 다음 node를 할당</span></span><br><span class="line">            currentNode = head.nlink;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//currentNode의 link가 null이 아닐 경우 한 node씩 다음 node로 이동</span></span><br><span class="line">            <span class="keyword">while</span> (currentNode.nlink != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="comment">// currentNode의 node를 가져와 할당</span></span><br><span class="line">                preNode = currentNode;</span><br><span class="line">                <span class="comment">// 다음 node를 할당</span></span><br><span class="line">                currentNode = currentNode.nlink;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 마지막 node 이전 node의 link를 null로 저장하여 마지막 node 삭제</span></span><br><span class="line">            preNode.nlink = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// node 순차 검색</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DublyListNode <span class="title">searchNode</span><span class="params">(String data)</span> </span>&#123;</span><br><span class="line">        DublyListNode currentNode = <span class="keyword">this</span>.head;</span><br><span class="line">        <span class="keyword">while</span> (currentNode != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (data == currentNode.getData())</span><br><span class="line">                <span class="keyword">return</span> currentNode;</span><br><span class="line">            <span class="keyword">else</span> currentNode = currentNode.nlink;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> currentNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 모든 node 출력</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        DublyListNode currentNode = <span class="keyword">this</span>.head;</span><br><span class="line">        System.out.printf(<span class="string">"LinkedList = ("</span>);</span><br><span class="line">        <span class="keyword">while</span> (currentNode != <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.printf(currentNode.getData());</span><br><span class="line">            currentNode = currentNode.nlink;</span><br><span class="line">            <span class="keyword">if</span> (currentNode != <span class="keyword">null</span>) &#123;</span><br><span class="line">                System.out.printf(<span class="string">", "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">")"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>※ 공부 정리 Blog로 여러 피드백은 감사히 받겠습니다. 감사합니다.</strong></p>]]></content:encoded>
      
      <comments>https://bokbutcode.github.io/2020/11/21/%EC%97%B0%EA%B2%B0%EB%A6%AC%EC%8A%A4%ED%8A%B8/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
